---
version: 2.1

commands:
  environment:
    description: "Set environment"
    steps:
      - run:
          name: Setup environment variables
          command: |
            echo 'export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"' >> "${BASH_ENV}"
            echo 'export M2_HOME="/opt/maven"' >> "${BASH_ENV}"
            echo 'export PATH="${M2_HOME}/bin:${PATH}"' >> "${BASH_ENV}"
      - run:
          name: "Clean running docker containers, images and volumes"
          command: |
            docker rm $(docker ps -aq) || :
            docker system prune --force --all --volumes
  cached-checkout:
    description: "Git: Checkout with caching"
    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
      - checkout
      - run:
          name: "Git: fetch origin"
          command: |
            git remote prune origin || :
            git fetch origin
  save-cached-checkout:
    description: "Git: Save cache"
    steps:
      - save_cache:
          key: source-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  system-info:
    description: "Gather system information"
    steps:
      - run:
          name: Gather system information
          command: |
            .circleci/scripts/system-info.sh
  extract-pom-version:
    description: "Extract version from main pom.xml"
    steps:
      - run:
          name: Extract Maven POM version
          command: .circleci/scripts/pom2version.sh pom.xml > pom-version-cache.key
  save-maven-cache:
    description: "Maven: Save cache"
    steps:
      - run:
          name: "Maven: Remove old artifacts to keep workspace size down"
          command: .circleci/scripts/clean-m2.sh
      - run:
          name: "Maven: Remove Extra Maven Repository OpenNMS Files"
          command: |
            mv /data/circleci-runner/m2/repository/org/opennms /data/circleci-runner/m2.temp
      - save_cache:
          key: maven-dependencies-v3-{{ checksum "pom-version-cache.key" }}-{{ checksum "maven-dependency-pom-cache.key" }}
          paths:
            - /data/circleci-runner/m2
      - run:
          name: "Maven: Restore Extra Maven Repository OpenNMS Files"
          command: |
            # now move them back so they end up in the workspace for builds further down the workflow
            mv /data/circleci-runner/m2.temp /data/circleci-runner/m2/repository/org/opennms
  restore-maven-cache:
    description: "Maven: Calculate cache key and restore cache"
    steps:
      - run:
          name: "Maven: Calculate cache key from pom files"
          command: find . -type f -name "pom.xml" | grep -v /target/ | sort -u | xargs cat > maven-dependency-pom-cache.key
      - restore_cache:
          keys:
            - maven-dependencies-v3-{{ checksum "pom-version-cache.key" }}-{{ checksum "maven-dependency-pom-cache.key" }}
            - maven-dependencies-v3-{{ checksum "pom-version-cache.key" }}-
  save-nodejs-cache:
    description: "NodeJS: Save cache"
    steps:
      - run:
          name: "NodeJS: Clean up cache tmp directory"
          command: rm -rf ~/.npm/_cacache/tmp
      - save_cache:
          key: nodejs-dependencies-v1-{{ checksum "pom-version-cache.key" }}-{{ checksum "nodejs-dependency-json-cache.key" }}
          paths:
            - ~/.npm
  restore-nodejs-cache:
    description: "NodeJS: Calculate cache key and restore cache"
    steps:
      - run:
          name: "NodeJS: Calculate cache key"
          command: find core/web-assets -name package\*.json -o -name bower.json | grep -v /target/ | sort -u | xargs cat > nodejs-dependency-json-cache.key
      - restore_cache:
          keys:
            - nodejs-dependencies-v1-{{ checksum "pom-version-cache.key" }}-{{ checksum "nodejs-dependency-json-cache.key" }}
            - nodejs-dependencies-v1-{{ checksum "pom-version-cache.key" }}-
  collect-results:
    description: "Collect test results, logs and build artifacts"
    steps:
      - run:
          name: Collect assemble artifacts
          when: always
          command: |
            make collect-artifacts
      - run:
          name: Collect test results
          when: always
          command: |
            make collect-testresults
            echo "Move failsafe summary report to parent directory, it fails when it get's uploaded as a test result"
            find . -type f -regex ".*\/target\/artifacts\/failsafe-reports\/failsafe-summary\.xml" -exec mv {} target/artifacts \;
      - store_test_results:
          path: target/artifacts/surefire-reports
      - store_test_results:
          path: target/artifacts/failsafe-reports
      - run:
          name: Compress test results for upload as artifacts
          when: always
          command: |
            find . -type f -regex ".*\/target\/artifacts\/surefire-reports\/.*\.xml" > testResultFiles.txt
            find . -type f -regex ".*\/target\/artifacts\/failsafe-reports\/.*\.xml" >> testResultFiles.txt
            tar cjf target/artifacts/testResultsArchive.tar.bz2 -T testResultFiles.txt
            rm -rf target/artifacts/surefire-reports target/artifacts/failsafe-reports testResultFiles.txt
      - store_artifacts:
          path: target/artifacts
          destination: artifacts
  clean-system:
    description: "Clean build system"
    steps:
      - run:
          name: "Remove build environment"
          when: always
          command: |
            docker stop buildx_buildkit_opennms-build-env-oci0
            docker rm buildx_buildkit_opennms-build-env-oci0
            docker volume rm buildx_buildkit_opennms-build-env-oci0_state
      - run:
          name: "Clean: Docker environment"
          when: always
          command: |
            make destroy-postgres
            docker system prune --force --all --volumes
      - run:
          name: "Clean: Maven repository"
          when: always
          command: rm -rf ~/.m2/*
      - run:
          name: "Clean: NodeJS cache"
          when: always
          command: rm -rf ~/.npm/*

workflows:
  build-workflow:
    jobs:
      - smoke-build
      - expensive-build:
          context: SonarCloud
          requires:
            - smoke-build
      - unit-tests:
          context: SonarCloud
          requires:
            - smoke-build
      - integration-tests:
          context: SonarCloud
          requires:
            - smoke-build
      - smoke-tests-core:
          context: SonarCloud
          requires:
            - smoke-build
      - smoke-tests-minion:
          context: SonarCloud
          requires:
            - smoke-build
      - smoke-tests-sentinel:
          context: SonarCloud
          requires:
            - smoke-build
jobs:
  smoke-build:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Cleaning project for quick validation
          command: |
            make validate
      - run:
          name: Build Web UI with yarn including tests
          command: |
            make compile-ui
      - run:
          name: Build from source
          command: |
            make quick-compile
      - run:
          name: Assemble tarball
          command: |
            make quick-assemble
      - run:
          name: Quick smoke tests
          command: |
            make quick-smoke
          no_output_timeout: 30m
      - run:
          name: Analyze OCI layers
          command: |
            make show-core-oci
            make show-minion-oci
            make show-sentinel-oci
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system

  expensive-build:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Cleaning project for quick validation
          command: |
            make validate
      - run:
          name: Build Web UI with yarn including tests
          command: |
            make compile-ui
      - run:
          name: Build from source
          command: |
            make compile
          no_output_timeout: 30m
      - run:
          name: Assemble tarball
          command: |
            make assemble
      - run:
          name: Quick smoke tests
          command: |
            make quick-smoke
          no_output_timeout: 30m
      - run:
          name: Create Software Bill of Materials (SBOM) for container images
          command: |
            make core-oci-sbom
            make minion-oci-sbom
            make sentinel-oci-sbom
      - run:
          name: Security scanning container images
          command: |
            make core-oci-sec-scan
            make minion-oci-sec-scan
            make sentinel-oci-sec-scan
      - run:
          name: Send code coverage data
          command: |
            make code-coverage
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system

  unit-tests:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Prepare the build for tests
          command: |
            make quick-compile && make quick-assemble
      - run:
          name: Run unit test suites
          command: |
            make unit-tests
      - run:
          name: Send code coverage data
          command: |
            make code-coverage
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system

  integration-tests:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Prepare the build for tests
          command: |
            make quick-compile && make quick-assemble
      - run:
          name: Run integration test suites
          command: |
            make integration-tests
      - run:
          name: Send code coverage data
          command: |
            make code-coverage
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system

  smoke-tests-core:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Build and assemble to create container images
          command: |
            make quick-compile
            make quick-assemble
      - run:
          name: Run smoke tests
          command: |
            make core-smoke
          no_output_timeout: 1h
      - run:
          name: Send code coverage data
          command: |
            make code-coverage
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system

  smoke-tests-minion:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Build and assemble to create container images
          command: |
            make quick-compile
            make quick-assemble
      - run:
          name: Run smoke tests
          command: |
            make minion-smoke
          no_output_timeout: 1h
      - run:
          name: Send code coverage data
          command: |
            make code-coverage
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system

  smoke-tests-sentinel:
    machine: true
    resource_class: bluebird-labs/c7g2xlarge
    steps:
      - cached-checkout
      - save-cached-checkout
      - environment
      - system-info
      - extract-pom-version
      - restore-maven-cache
      - restore-nodejs-cache
      - run:
          name: Build and assemble to create container images
          command: |
            make quick-compile
            make quick-assemble
      - run:
          name: Run smoke tests
          command: |
            make sentinel-smoke
          no_output_timeout: 1h
      - run:
          name: Send code coverage data
          command: |
            make code-coverage
      - collect-results
      - save-maven-cache
      - save-nodejs-cache
      - clean-system
